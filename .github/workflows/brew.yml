name: test

on:
  push:
    branches: [ master, dev ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        runs-on: [macos-14, macos-13, macos-12, macos-11]
        target-platform: [ 'MacOSX-10.15-x86_64', 'MacOSX-11.0-x86_64', 'MacOSX-12.0-x86_64', 'MacOSX-13.0-x86_64', 'MacOSX-11.0-arm64', 'MacOSX-12.0-arm64', 'MacOSX-13.0-arm64', 'iPhoneOS-11.0-arm64e', 'iPhoneOS-11.0-arm64' ]

    runs-on: ${{ matrix.runs-on }}

    steps:
      - uses: actions/checkout@v4

      - run:  brew update
      - run:  brew install --overwrite python@3.10 python@3.11 python@3.12
      - run:  brew install cmake ninja pkg-config curl sqlite jansson libyaml libgit2 libarchive

      - run: sed -i '.bak' '/Requires.private:/d' "$(brew --prefix libarchive)/lib/pkgconfig/libarchive.pc"

      - run:  |
          export PKG_CONFIG_PATH="/usr/local/lib/pkgconfig:/usr/local/opt/openssl@1.1/lib/pkgconfig:/usr/local/opt/curl/lib/pkgconfig:/usr/local/opt/libarchive/lib/pkgconfig"
          CMAKE_EXE_LINKER_FLAGS='-L/usr/local/lib -L/usr/local/opt/openssl@1.1/lib -lssl -liconv -framework CoreFoundation -framework Security'
          CMAKE_FIND_ROOT_PATH="$(brew --prefix openssl@1.1);$(brew --prefix curl);$(brew --prefix sqlite);$(brew --prefix libarchive)"

          cmake \
              -S . \
              -B build.d \
              -G Ninja \
              -DCMAKE_INSTALL_PREFIX=./output \
              -DCMAKE_VERBOSE_MAKEFILE=ON \
              -DCMAKE_EXE_LINKER_FLAGS="$CMAKE_EXE_LINKER_FLAGS" \
              -DCMAKE_FIND_ROOT_PATH="$CMAKE_FIND_ROOT_PATH"

      - run:  cmake --build   build.d
      - run:  cmake --install build.d


      - run: ./output/bin/xcpkg --help
      - run: ./output/bin/xcpkg -h

      - run: ./output/bin/xcpkg --version
      - run: ./output/bin/xcpkg -V

      - run: ./output/bin/xcpkg gen-url-transform-sample

      - run: ./output/bin/xcpkg env

      - run: ./output/bin/xcpkg setup

      - run: ./output/bin/xcpkg sysinfo

      - run: ./output/bin/xcpkg xcinfo
      - run: ./output/bin/xcpkg xcinfo --list-supported-platform-names

      - run: ./output/bin/xcpkg integrate zsh

      - run: ./output/bin/xcpkg update

      - run: ./output/bin/xcpkg search lib
      - run: ./output/bin/xcpkg search uctags


      - run: ./output/bin/xcpkg info-available uctags
      - run: ./output/bin/xcpkg info-available uctags --yaml
      - run: ./output/bin/xcpkg info-available uctags --json
      - run: ./output/bin/xcpkg info-available uctags version
      - run: ./output/bin/xcpkg info-available uctags license
      - run: ./output/bin/xcpkg info-available uctags summary
      - run: ./output/bin/xcpkg info-available uctags web-url
      - run: ./output/bin/xcpkg info-available uctags git-url
      - run: ./output/bin/xcpkg info-available uctags git-sha
      - run: ./output/bin/xcpkg info-available uctags git-ref
      - run: ./output/bin/xcpkg info-available uctags src-url
      - run: ./output/bin/xcpkg info-available uctags src-sha


      - run: ./output/bin/xcpkg depends uctags
      - run: ./output/bin/xcpkg depends uctags -t dot
      - run: ./output/bin/xcpkg depends uctags -t box
      - run: ./output/bin/xcpkg depends uctags -t dot -o a/
      - run: ./output/bin/xcpkg depends uctags -o uctags.box


      - run: ./output/bin/xcpkg install ${{ matrix.target-platform }}/uctags


      - run: ./output/bin/xcpkg info-installed ${{ matrix.target-platform }}/uctags
      - run: ./output/bin/xcpkg info-installed ${{ matrix.target-platform }}/uctags --yaml
      - run: ./output/bin/xcpkg info-installed ${{ matrix.target-platform }}/uctags --json
      - run: ./output/bin/xcpkg info-installed ${{ matrix.target-platform }}/uctags version
      - run: ./output/bin/xcpkg info-installed ${{ matrix.target-platform }}/uctags license
      - run: ./output/bin/xcpkg info-installed ${{ matrix.target-platform }}/uctags summary
      - run: ./output/bin/xcpkg info-installed ${{ matrix.target-platform }}/uctags web-url
      - run: ./output/bin/xcpkg info-installed ${{ matrix.target-platform }}/uctags git-url
      - run: ./output/bin/xcpkg info-installed ${{ matrix.target-platform }}/uctags git-sha
      - run: ./output/bin/xcpkg info-installed ${{ matrix.target-platform }}/uctags git-ref
      - run: ./output/bin/xcpkg info-installed ${{ matrix.target-platform }}/uctags src-url
      - run: ./output/bin/xcpkg info-installed ${{ matrix.target-platform }}/uctags src-sha
      - run: ./output/bin/xcpkg info-installed ${{ matrix.target-platform }}/uctags builtat
      - run: ./output/bin/xcpkg info-installed ${{ matrix.target-platform }}/uctags builtat-iso-8601
      - run: ./output/bin/xcpkg info-installed ${{ matrix.target-platform }}/uctags builtat-rfc-3339
      - run: ./output/bin/xcpkg info-installed ${{ matrix.target-platform }}/uctags builtat-iso-8601-utc
      - run: ./output/bin/xcpkg info-installed ${{ matrix.target-platform }}/uctags builtat-rfc-3339-utc
      - run: ./output/bin/xcpkg info-installed ${{ matrix.target-platform }}/uctags installed-dir
      - run: ./output/bin/xcpkg info-installed ${{ matrix.target-platform }}/uctags installed-files


      - run: ./output/bin/xcpkg tree ${{ matrix.target-platform }}/uctags
      - run: ./output/bin/xcpkg tree ${{ matrix.target-platform }}/uctags -a

      - run: ./output/bin/xcpkg pack ${{ matrix.target-platform }}/uctags
      - run: ./output/bin/xcpkg pack ${{ matrix.target-platform }}/uctags -t tar.gz
      - run: ./output/bin/xcpkg pack ${{ matrix.target-platform }}/uctags -t tar.xz
      - run: ./output/bin/xcpkg pack ${{ matrix.target-platform }}/uctags -t tar.xz -o .
      - run: ./output/bin/xcpkg pack ${{ matrix.target-platform }}/uctags -o .
      - run: ./output/bin/xcpkg pack ${{ matrix.target-platform }}/uctags -o xx.tar.xz

      - run: ./output/bin/xcpkg formula-repo-list

      - run: ./output/bin/xcpkg ls-available
      - run: ./output/bin/xcpkg ls-installed
      - run: ./output/bin/xcpkg ls-outdated

      - run: ./output/bin/xcpkg is-available uctags
      - run: ./output/bin/xcpkg is-installed ${{ matrix.target-platform }}/uctags
      - run: ./output/bin/xcpkg is-outdated  ${{ matrix.target-platform }}/uctags || echo 'not outdated'

      - run: ./output/bin/xcpkg uninstall ${{ matrix.target-platform }}/uctags

      - run: ./output/bin/xcpkg fetch curl

      - run: ./output/bin/xcpkg upgrade-self
