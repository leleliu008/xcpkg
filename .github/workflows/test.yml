name: test

on:
  push:
    branches: [ master, dev ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        runs-on: [macos-15, macos-14, macos-13]
        target-platform:
          - MacOSX-10.15-x86_64
          - MacOSX-11.0-x86_64
          - MacOSX-12.0-x86_64
          - MacOSX-13.0-x86_64
          - MacOSX-14.0-x86_64
          - MacOSX-15.0-x86_64
          - MacOSX-11.0-arm64
          - MacOSX-12.0-arm64
          - MacOSX-13.0-arm64
          - MacOSX-14.0-arm64
          - MacOSX-15.0-arm64
          - iPhoneOS-11.0-arm64e
          - iPhoneOS-11.0-arm64

    runs-on: ${{ matrix.runs-on }}

    steps:
      - uses: actions/checkout@v4

      - run: export -p

      - run: echo ${{ github.ref_name }}

      - name: create a local tap for homebrew
        run: |
          MY_FORMULA_DIR="$(brew --repository)/Library/Taps/leleliu008/homebrew-tmp/Formula"
          install -d "$MY_FORMULA_DIR"
          cat > "$MY_FORMULA_DIR/xcpkg.rb" <<EOF
          class Xcpkg < Formula
            desc     "A package builder/manager for Xcode to build projects written in C, C++, Rust, Zig, Go, Haskell, etc"
            homepage "https://github.com/leleliu008/xcpkg"
            head     "https://github.com/leleliu008/xcpkg.git", branch: "master"
            url      "https://github.com/leleliu008/xcpkg.git", revision: "${{ github.sha }}"
            version  "0.1000.1"
            license  "Apache-2.0"

            depends_on "cmake" => :build
            depends_on "ninja" => :build
            depends_on "pkg-config" => :build

            depends_on "curl"
            depends_on "jansson"
            depends_on "libyaml"
            depends_on "libgit2"
            depends_on "libarchive"

            def install
              system "cmake", "-S", "c", "-B", "build", *std_cmake_args
              system "cmake", "--build",   "build"
              system "cmake", "--install", "build"
            end

            test do
              system "#{bin}/xcpkg", "--help"
            end
          end
          EOF

      - run: brew uninstall cmake
      - run: brew info    xcpkg
      - run: brew install xcpkg -v

      - run: xcpkg --help
      - run: xcpkg -h

      - run: xcpkg --version
      - run: xcpkg -V

      - run: xcpkg about

      - run: xcpkg sysinfo

      - run: xcpkg xcinfo

      - run: xcpkg completion zsh

      - run: xcpkg update

      - run: xcpkg search lib
      - run: xcpkg search libarchive


      - run: xcpkg info-available libarchive
      - run: xcpkg info-available libarchive --yaml
      - run: xcpkg info-available libarchive --json
      - run: xcpkg info-available libarchive version
      - run: xcpkg info-available libarchive license
      - run: xcpkg info-available libarchive summary
      - run: xcpkg info-available libarchive web-url
      - run: xcpkg info-available libarchive git-url
      - run: xcpkg info-available libarchive git-sha
      - run: xcpkg info-available libarchive git-ref
      - run: xcpkg info-available libarchive src-url
      - run: xcpkg info-available libarchive src-sha


      - run: xcpkg depends libarchive
      - run: xcpkg depends libarchive -t d2
      - run: xcpkg depends libarchive -t dot
      - run: xcpkg depends libarchive -t box
      - run: xcpkg depends libarchive -t dot -o a/
      - run: xcpkg depends libarchive -o libarchive.box


      - run: xcpkg install ${{ matrix.target-platform }}/libarchive


      - run: xcpkg info-installed ${{ matrix.target-platform }}/libarchive
      - run: xcpkg info-installed ${{ matrix.target-platform }}/libarchive --yaml
      - run: xcpkg info-installed ${{ matrix.target-platform }}/libarchive --json
      - run: xcpkg info-installed ${{ matrix.target-platform }}/libarchive version
      - run: xcpkg info-installed ${{ matrix.target-platform }}/libarchive license
      - run: xcpkg info-installed ${{ matrix.target-platform }}/libarchive summary
      - run: xcpkg info-installed ${{ matrix.target-platform }}/libarchive web-url
      - run: xcpkg info-installed ${{ matrix.target-platform }}/libarchive git-url
      - run: xcpkg info-installed ${{ matrix.target-platform }}/libarchive git-sha
      - run: xcpkg info-installed ${{ matrix.target-platform }}/libarchive git-ref
      - run: xcpkg info-installed ${{ matrix.target-platform }}/libarchive src-url
      - run: xcpkg info-installed ${{ matrix.target-platform }}/libarchive src-sha
      - run: xcpkg info-installed ${{ matrix.target-platform }}/libarchive builtat
      - run: xcpkg info-installed ${{ matrix.target-platform }}/libarchive builtat-iso-8601
      - run: xcpkg info-installed ${{ matrix.target-platform }}/libarchive builtat-rfc-3339
      - run: xcpkg info-installed ${{ matrix.target-platform }}/libarchive builtat-iso-8601-utc
      - run: xcpkg info-installed ${{ matrix.target-platform }}/libarchive builtat-rfc-3339-utc
      - run: xcpkg info-installed ${{ matrix.target-platform }}/libarchive --prefix
      - run: xcpkg info-installed ${{ matrix.target-platform }}/libarchive --files


      - run: xcpkg tree ${{ matrix.target-platform }}/libarchive
      - run: xcpkg tree ${{ matrix.target-platform }}/libarchive -a

      - run: xcpkg bundle ${{ matrix.target-platform }}/libarchive tar.gz
      - run: xcpkg bundle ${{ matrix.target-platform }}/libarchive tar.lz
      - run: xcpkg bundle ${{ matrix.target-platform }}/libarchive tar.xz
      - run: xcpkg bundle ${{ matrix.target-platform }}/libarchive zip
      - run: xcpkg bundle ${{ matrix.target-platform }}/libarchive tar.xz -o xx.tar.xz

      - run: xcpkg formula-repo-list

      - run: xcpkg ls-available
      - run: xcpkg ls-installed
      - run: xcpkg ls-outdated

      - run: xcpkg is-available libarchive
      - run: xcpkg is-installed ${{ matrix.target-platform }}/libarchive
      - run: xcpkg is-outdated  ${{ matrix.target-platform }}/libarchive || echo 'not outdated'

      - run: xcpkg uninstall ${{ matrix.target-platform }}/libarchive

      - run: xcpkg fetch curl

      - run: xcpkg upgrade-self
