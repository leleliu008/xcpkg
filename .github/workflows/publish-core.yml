name: publish xcpkg core

on:
  workflow_dispatch:

jobs:

  base:
    runs-on: ubuntu-latest

    steps:

      - id:  calculate-release-version
        run: |
          RELEASE_VERSION="$(date +%Y.%m.%d)"

          printf 'RELEASE_VERSION=%s\n' "$RELEASE_VERSION" >> "$GITHUB_OUTPUT"

    outputs:
      release-version: ${{ steps.calculate-release-version.outputs.RELEASE_VERSION }}


  build:
    needs: base

    runs-on: macos-15

    env:
      HOMEBREW_NO_INSTALLED_DEPENDENTS_CHECK: 1

    strategy:
      fail-fast: false
      matrix:
        target-version: ['10.15', '11.0', '12.0', '13.0', '14.0', '15.0']
        target-arch: [x86_64, arm64]

    steps:
      - uses: actions/checkout@v4

      - name: create a local tap for homebrew
        run: |
          MY_FORMULA_DIR="$(brew --repository)/Library/Taps/leleliu008/homebrew-tmp/Formula"
          install -d "$MY_FORMULA_DIR"
          cat > "$MY_FORMULA_DIR/xcpkg.rb" <<EOF
          class Xcpkg < Formula
            desc     "A package builder/manager for Xcode to build projects written in C, C++, Rust, Zig, Go, Haskell, etc"
            homepage "https://github.com/leleliu008/xcpkg"
            head     "https://github.com/leleliu008/xcpkg.git", branch: "master"
            url      "https://github.com/leleliu008/xcpkg.git", revision: "${{ github.sha }}"
            version  "0.1000.1"
            license  "Apache-2.0"

            depends_on "cmake" => :build
            depends_on "ninja" => :build
            depends_on "pkg-config" => :build

            depends_on "curl"
            depends_on "jansson"
            depends_on "libyaml"
            depends_on "libgit2"
            depends_on "libarchive"

            def install
              system "cmake", "-S", "c", "-B", "build", *std_cmake_args
              system "cmake", "--build",   "build"
              system "cmake", "--install", "build"
            end

            test do
              system "#{bin}/xcpkg", "--help"
            end
          end
          EOF

      - run: brew uninstall cmake

      - run: brew info    xcpkg
      - run: brew install xcpkg -v

      - run: xcpkg update
      - run: xcpkg install MacOSX-${{ matrix.target-version }}-${{ matrix.target-arch }}/uppm@0.15.4
      - run: xcpkg bundle  MacOSX-${{ matrix.target-version }}-${{ matrix.target-arch }}/uppm@0.15.4 .tar.xz

      - run: install -d out/

      - run: |
          set -ex

          CC="$(xcrun --sdk macosx --find clang)"
          SYSROOT="$(xcrun --sdk macosx --show-sdk-path)"
          CFLAGS="-isysroot $SYSROOT -mmacosx-version-min=${{ matrix.target-version }} -arch ${{ matrix.target-arch }} -Qunused-arguments"

          cd core/

          for f in *.c
          do
            o="../out/${f%.c}"
            $CC $CFLAGS -std=c99 -Os -flto -o "$o" "$f"
            strip "$o"
          done

      - run: curl -LO https://raw.githubusercontent.com/adobe-fonts/source-code-pro/release/OTF/SourceCodePro-Light.otf

      - run: tar vxf uppm*.tar.xz -C out --strip-components=1

      - run: mv out/bin/uppm *.otf fonts.conf out/

      - run: rm -rf out/bin/ out/share/ out/.xcpkg/

      - run: |
          DIRNAME="xcpkg-core-${{ needs.base.outputs.release-version }}-macos-${{ matrix.target-version }}-${{ matrix.target-arch }}"
          mv out "$DIRNAME"
          tar cJvf "$DIRNAME.tar.xz" "$DIRNAME"

      - uses: actions/upload-artifact@v4
        with:
          name: xcpkg-core-${{ needs.base.outputs.release-version }}-macos-${{ matrix.target-version }}-${{ matrix.target-arch }}.tar.xz
          path: xcpkg-core-${{ needs.base.outputs.release-version }}-macos-${{ matrix.target-version }}-${{ matrix.target-arch }}.tar.xz


  publish:

    needs: [base, build]

    runs-on: ubuntu-latest

    env:
      GH_TOKEN: ${{ github.token }}

    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: '*'
          path: .
          merge-multiple: true

      - run: ls -a

      # to avaid: failed to run git: fatal: not a git repository (or any of the parent directories): .git
      - run: git -c init.defaultBranch=master init
      - run: git remote add origin ${{ github.repositoryUrl }}

      - run: gh release create xcpkg-core-${{ needs.base.outputs.release-version }} xcpkg-core-*.tar.xz --title xcpkg-core-${{ needs.base.outputs.release-version }} --notes "xcpkg core"
